Leetcode 217: Contains Duplicate
- Hashset intro rah basics, initialize with hashSet = set()


Leetcode 242: Valid Anagram
- .get(a,b) vanya k hunxa: hashmap ma use hunxa, a lyauna khojxa tara a exist gardaina vaney b aka default value lyauxa so that error na falos
- countS[s[i]] = 1 + countS.get(s[i],0)
+ sabai sorting algorithm tha hunu parxa

Leetcode 1: Two Sum
- Hash set use garne rah one by one add garney


Leetcode 49: Group Anagrams
- tuple
- ord("a") gives the askii vaalue of the letter


Leetcode 347: Top K frequent elements
- dami solution xa
- heap le kasari solve grni paxi hernu


Leetcode 238: Product of array except self
- len(nums) le total number of elements primt garxa
- 2ta extra banauna ko sato direct result ma ek ek gari hale ni hunxa

        ===========================
        PYTHON RANGE & SLICING CHEAT SHEET
        ===========================

        1. range(start, stop)
        ---------------------
        Includes start, excludes stop.

        Example:
            range(0, 5) → [0, 1, 2, 3, 4]
            for i in range(0, len(my_list)):
                # safe iteration

        2. range(start, stop, step)
        ---------------------------
        Example:
            range(0, 10, 2) → [0, 2, 4, 6, 8]

        3. List slicing: a[start:end]
        -----------------------------
        Includes 'start', excludes 'end'

        Example:
            a = [10, 20, 30, 40, 50]
            a[1:4] → [20, 30, 40]

        4. String slicing: s[start:end]
        -------------------------------
        Example:
            s = "abcdef"
            s[2:5] → 'cde'

        5. Negative indexing
        --------------------
        -1 is the last item

        Example:
            a = [10, 20, 30]
            a[-1] → 30

        6. enumerate()
        --------------
        Used to get index and value from an iterable

        Example:
            for i, val in enumerate(['a', 'b', 'c']):
                print(i, val)  # i: 0, 1, 2

        7. zip()
        --------
        Pairs elements; stops at shortest iterable

        Example:
            zip([1,2], [3,4,5]) → (1,3), (2,4)

        8. Common Pitfalls
        ------------------
        - range(len(my_list)) → OK
        - range(1, len(my_list)) → skips index 0
        - a[0:len(a)] → OK (includes all)
        - a[0:len(a)-1] → excludes last element

        ===========================
        Tip: Use range and slicing mindfully!
        ===========================

Leetcode 